{
	"nodes":[
		{"id":"1187f2666b4e9783","type":"group","x":1040,"y":-2000,"width":1900,"height":2199,"label":"Time Runtime"},
		{"id":"bc192c1c96c0845f","type":"group","x":-1160,"y":-1360,"width":1200,"height":1360,"label":"Wod Syntax"},
		{"id":"29f2a80ddcb828b4","type":"file","file":"Core/Runtime.md","x":1487,"y":-336,"width":760,"height":357,"color":"6"},
		{"id":"a6b5aef3cb7af45f","type":"text","text":"# Actions \n\n**EventAction**\n- Abstract base class for all actions\n- Key method: apply(setDisplay, setButtons, setResults)\n\n**SetDisplayAction**\n- Updates the timer display\n\n**SetButtonAction**\n- Updates available buttons\n\n**SetResultAction**\n- Updates results display","x":1667,"y":-701,"width":400,"height":238,"color":"6"},
		{"id":"d9f8d4388545ab44","type":"file","file":"DataTypes/Runtime Block.md","x":1667,"y":-1477,"width":400,"height":300,"color":"6"},
		{"id":"69ba6eee943ff348","type":"text","text":"## Parser Components\n\n**MdTimerParse**\n- Parser for WOD markdown syntax\n- Key methods: wodMarkdown(), wodBlock(), wodTimer()\n\n**MdTimerInterpreter**\n- Visitor that converts syntax to objects\n- Key methods: visit methods for different node types\n","x":-1051,"y":-560,"width":400,"height":435,"color":"4"},
		{"id":"2b240efb62e36dd6","type":"file","file":"Core/Compile.md","x":-1126,"y":-1266,"width":550,"height":160},
		{"id":"74c4ab35684a3755","type":"text","text":"## Lexer Tokens\n\n**Core Tokens**\n- Timer - Time format tokens\n- Weight - Weight measurements\n- Distance - Distance measurements\n- Number - Numeric values\n\n**Syntax Tokens**\n- Plus, Minus - Operators\n- GroupOpen, GroupClose - Grouping\n- Return - Line breaks\n- Identifier - Names\n- AllowedSymbol - Special characters","x":-506,"y":-1065,"width":480,"height":435,"color":"4"},
		{"id":"29e7ac1d216d9a53","type":"file","file":"Components/Editor.md","x":-851,"y":-1914,"width":585,"height":425,"color":"3"},
		{"id":"645a3308733212fe","type":"file","file":"DataTypes/Statement Block.md","x":200,"y":-569,"width":400,"height":454},
		{"id":"7aff2ef54d394c13","type":"text","text":"## UI Components & Hooks\n\n**useTimerRuntime**\n- React hook managing timer state\n- Processes tick events every 100ms\n- Manages display, buttons and results state\n\n**WodTimer**\n- Timer display component\n- Handles visual representation of timer\n- Processes timer events\n","x":140,"y":-1939,"width":520,"height":475,"color":"3"},
		{"id":"d4fa126d5857e21f","type":"text","text":"## Fragments \n\n**RoundsFragment**: Represents number of rounds (e.g., \"5x\")\n**TimerFragment**: Represents time duration\n**EffortFragment**: Represents workout intensity\n**RepFragment**: Represents repetitions\n**ResistanceFragment**: Weight/distance metrics\n**LapFragment**: Lap information\n\n**IncrementFragment**: Incremental changes","x":200,"y":-1156,"width":400,"height":400},
		{"id":"ae7d0efbf3bb212b","type":"text","text":"# Compiler Strategies\n\n**RepeatingGroupStrategy**\n- Handles structured round repetitions\n\n**AMRAPStrategy**\n- Handles \"As Many Rounds As Possible\"\n\n**RepeatingStatementStrategy**\n- Processes individual repeating elements\n\n**StatementStrategy**\n- Handles basic statements\n\n**SingleUnitStrategy**\n- Processes atomic workout elements\n\n**CompoundStrategy**\n- Combines multiple strategies","x":2360,"y":-1466,"width":340,"height":400,"color":"6"},
		{"id":"ce1b639003e78afa","type":"text","text":"# Event Handlers\n\n","x":1667,"y":-1017,"width":400,"height":227,"color":"6"},
		{"id":"aa241d237aaa28f1","type":"text","text":"# Runtime Metric\n\n- Represents a block of timer statements\n- Key methods: onEvent(), shouldRepeat(), onTimerEvent()","x":1667,"y":-1912,"width":400,"height":227,"color":"6"},
		{"id":"4065b391e6a3ff3b","type":"text","text":"## Result Models\n\n**WodResults**\n- Results display component\n- Shows workout metrics and results\n\n**WodResultBlock**\n- Result data for a workout block\n- Key props: blockId, index, metrics, times\n\n**WodMetric**\n- Individual measurement\n- Key props: blockId, index, type, value\n\n**ResultSpan**\n- Time span between events\n- Key method: duration()\n","x":200,"y":680,"width":400,"height":535,"color":"3"},
		{"id":"e90dbc329fe237ab","type":"text","text":"# Runtime Tick","x":1080,"y":-1912,"width":407,"height":152,"color":"6"},
		{"id":"3eac2ab5e14b8e3c","type":"text","text":"# Result Projection","x":108,"y":200,"width":585,"height":160},
		{"id":"337b14a12aa30c56","type":"text","text":"# WOD Timer Architecture\n\nThis diagram organizes the system by class hierarchies and interface implementations, showing how different components work together.\n\n**System Flow**:\n1. Parser components convert markdown to syntax trees\n2. Fragment implementations represent specific syntax elements\n3. Runtime classes execute the timer logic\n4. Actions implement state changes\n5. UI components render the state\n\nEach group represents classes implementing a common interface or serving a related purpose.","x":-820,"y":-2640,"width":713,"height":440,"color":"1"}
	],
	"edges":[
		{"id":"b5306594f61f4294","fromNode":"645a3308733212fe","fromSide":"right","toNode":"29f2a80ddcb828b4","toSide":"left","color":"6","label":"Load"},
		{"id":"61c6b1303e2f2020","fromNode":"d9f8d4388545ab44","fromSide":"left","toNode":"645a3308733212fe","toSide":"right","color":"5","label":"link"},
		{"id":"81f60cefdf3ff712","fromNode":"29e7ac1d216d9a53","fromSide":"right","toNode":"7aff2ef54d394c13","toSide":"left","color":"3","label":"Start"},
		{"id":"217cc4c23eb4fdd3","fromNode":"74c4ab35684a3755","fromSide":"left","toNode":"69ba6eee943ff348","toSide":"top"},
		{"id":"cba01ad1eefcadca","fromNode":"69ba6eee943ff348","fromSide":"right","toNode":"645a3308733212fe","toSide":"left"},
		{"id":"1741864a90465d31","fromNode":"aa241d237aaa28f1","fromSide":"right","toNode":"ae7d0efbf3bb212b","toSide":"top","color":"6"},
		{"id":"892936491cc7cd6d","fromNode":"d9f8d4388545ab44","fromSide":"top","toNode":"aa241d237aaa28f1","toSide":"bottom"},
		{"id":"dc6d2e0d1d4f064a","fromNode":"ae7d0efbf3bb212b","fromSide":"left","toNode":"d9f8d4388545ab44","toSide":"right","color":"6"},
		{"id":"a712bd61e7b3ffb1","fromNode":"ce1b639003e78afa","fromSide":"bottom","toNode":"a6b5aef3cb7af45f","toSide":"top","color":"6"},
		{"id":"95b3aec73874967b","fromNode":"29f2a80ddcb828b4","fromSide":"left","toNode":"ce1b639003e78afa","toSide":"left","color":"6","label":"Internal Events"},
		{"id":"db8f833e6536ba45","fromNode":"a6b5aef3cb7af45f","fromSide":"bottom","toNode":"29f2a80ddcb828b4","toSide":"top","color":"6"},
		{"id":"2907644a1013a83f","fromNode":"29f2a80ddcb828b4","fromSide":"right","toNode":"ae7d0efbf3bb212b","toSide":"bottom","color":"6","label":"Next\nStatement Node"},
		{"id":"7047d895314d2a3c","fromNode":"d9f8d4388545ab44","fromSide":"bottom","toNode":"ce1b639003e78afa","toSide":"top","label":"Events"},
		{"id":"ffd5ddebb147fa16","fromNode":"d4fa126d5857e21f","fromSide":"bottom","toNode":"645a3308733212fe","toSide":"top"},
		{"id":"7ce033f9592bb73c","fromNode":"e90dbc329fe237ab","fromSide":"right","toNode":"d9f8d4388545ab44","toSide":"left","color":"6"},
		{"id":"0850d5f726be00ae","fromNode":"2b240efb62e36dd6","fromSide":"bottom","toNode":"69ba6eee943ff348","toSide":"top"},
		{"id":"6397f9bd00366f39","fromNode":"29e7ac1d216d9a53","fromSide":"bottom","toNode":"bc192c1c96c0845f","toSide":"top","color":"3"},
		{"id":"d0c57b52de0d8528","fromNode":"7aff2ef54d394c13","fromSide":"right","toNode":"ce1b639003e78afa","toSide":"left","color":"3","label":"Start / Stop / Lap / Complete"},
		{"id":"f6bd1d03a5efe044","fromNode":"aa241d237aaa28f1","fromSide":"left","toNode":"d4fa126d5857e21f","toSide":"right","color":"5"},
		{"id":"1c5887081f770d9f","fromNode":"1187f2666b4e9783","fromSide":"bottom","toNode":"4065b391e6a3ff3b","toSide":"top","color":"6"},
		{"id":"5460fdc7f590d128","fromNode":"645a3308733212fe","fromSide":"bottom","toNode":"3eac2ab5e14b8e3c","toSide":"top","color":"5"},
		{"id":"3597c13bbe89c244","fromNode":"bc192c1c96c0845f","fromSide":"bottom","toNode":"3eac2ab5e14b8e3c","toSide":"left","color":"3"},
		{"id":"742168367f123204","fromNode":"3eac2ab5e14b8e3c","fromSide":"bottom","toNode":"4065b391e6a3ff3b","toSide":"top","color":"3"}
	]
}