/** @jsxImportSource react */
import React, { useEffect } from 'react';
import { ClockAnchor } from './ClockAnchor';
import { EffortAnchor } from './EffortAnchor';
import { ButtonAnchor } from '@/components/buttons/ButtonAnchor';
import { IRuntimeEvent } from '@/core/IRuntimeEvent';
import { Subject } from 'rxjs';
import { cn } from '@/core/utils';
import { useClockSync } from '../syncs/useClockSync';
import { useButtonSync } from '../syncs/useButtonSync';
import { OutputEvent } from '@/core/OutputEvent';

export interface ClockFaceLayoutProps {
  /** Optional CSS classes to apply to the container */
  className?: string;
  input: Subject<IRuntimeEvent>,
  /** Event input subject for dispatching button events */
  registerSyncs: (registers: ((input: OutputEvent) => void)[]) => void;
}

/**
 * Complete clock face display for the wod.wiki system based on the RuntimeSpansUIPipeline.md plan.
 * Features:
 * - Top ribbon with ButtonAnchor for "system" events  
 * - 3-column layout with EffortAnchor, ClockAnchor (primary), ClockAnchor (total)
 * - Bottom row with "runtime" buttons
 * - All anchors driven by context that tracks each by name
 */
export const ClockFaceLayout: React.FC<ClockFaceLayoutProps> = ({
  className,
  input,
  registerSyncs
}) => {

  const [primary, syncPrimary] = useClockSync("primary");
  const [total, syncTotal] = useClockSync("total");
  const [system, syncSystem] = useButtonSync("system");
  const [runtime, syncRuntime] = useButtonSync("runtime");
  
  useEffect(() => {
    // Register the syncs when component mounts
    registerSyncs([
      syncPrimary,
      syncTotal,
      syncSystem,
      syncRuntime
    ]);
  }, []);

  return (    
      <div className={cn("w-full flex flex-col gap-4", className || "")}>
        {/* Top section with title and floating system buttons */}
        <div className="relative px-4 py-2">          
          <div className="absolute top-2 right-4">
            <ButtonAnchor 
              buttons={system}
              input={input}
              className="flex-shrink-0"
            />
          </div>
        </div>

        {/* Main 3-column layout - stack on narrow screens */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4 px-4">
          {/* Left column - Effort display for "primary" resultSpan */}
          <div className="bg-white border border-gray-200 rounded-lg p-4 flex items-center justify-center">
            <EffortAnchor 
              clock={primary}              
              className="text-center"
            />
          </div>

          {/* Center column - Primary clock for "primary" resultSpan */}
          <div className="bg-white border border-gray-200 rounded-lg p-6 flex items-center justify-center">
            <ClockAnchor 
              clock={primary}
              showRemaining={true}
              showEffort={false} // Effort is shown separately in left column
              className="text-center"
            />
          </div>

          {/* Right column - Total clock for "total" resultSpan (generated by RootBlock) */}
          <div className="bg-gray-50 border border-gray-200 rounded-lg p-4 flex items-center justify-center">
            <ClockAnchor 
              clock={total}
              label="Total Time"
              className="text-center text-gray-600"
            />
          </div>
        </div>

        {/* Bottom row with runtime buttons - centered below the clocks */}
        <div className="px-4 pb-2">
          <div className="flex justify-center">
            <ButtonAnchor 
              buttons={runtime}
              input={input}
              className="justify-center"
            />
          </div>
        </div>
      </div>
  );
};
