name: build-qwik
on:
  workflow_call:
    inputs:
      version:
        description: "The version for the package"
        required: true
        type: string
jobs:
  build:
    runs-on: ubuntu-22.04  

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Update version in package.json
        run: |
          node -e "const pkg=require('./package.json'); pkg.version='${{ inputs.version }}'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2))"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
        # Continue on error in case there are test failures that shouldn't block the build
        continue-on-error: true

      - name: Build Package
        run: npm run build

      - name: Build Storybook
        run: npm run build-storybook

      - name: Prepare npm package
        run: |
          # Copy necessary files to dist folder for npm publishing
          cp package.json README.md LICENSE* ./dist/ 2>/dev/null || :
          # Create minimal package.json for dist
          node -e "const pkg=require('./package.json'); const minPkg = { 
            name: pkg.name, 
            version: '${{ inputs.version }}', 
            description: pkg.description || '', 
            keywords: pkg.keywords || [], 
            author: pkg.author || '', 
            license: pkg.license || '', 
            repository: pkg.repository || '', 
            homepage: pkg.homepage || '', 
            bugs: pkg.bugs || '', 
            main: pkg.main.replace('./dist/', './'), 
            module: pkg.module.replace('./dist/', './'), 
            exports: JSON.parse(JSON.stringify(pkg.exports).replace(new RegExp('./dist/', 'g'), './')), 
            dependencies: pkg.dependencies || {},
            publishConfig: { access: 'public' } 
          }; 
          require('fs').writeFileSync('./dist/package.json', JSON.stringify(minPkg, null, 2))"

      - name: Upload Storybook 
        uses: actions/upload-artifact@v4
        if: ${{ github.ref_type=='tag' || github.ref_name=='main' }}  
        with:
          name: page
          path: storybook-static
      
      - name: Upload Package      
        uses: actions/upload-artifact@v4
        if: ${{ github.ref_type=='tag' || github.ref_name=='main' }}  
        with:
          name: package
          path: dist
