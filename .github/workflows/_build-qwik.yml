name: build-qwik
on:
  workflow_call:
    inputs:
      version:
        description: "The version for the package"
        required: true
        type: string

# Add permissions needed for npm provenance
permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-22.04  

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Update version in package.json
        run: |
          node -e "const pkg=require('./package.json'); pkg.version='${{ inputs.version }}'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2))"

      - name: Install dependencies
        run: npm ci
    
      - name: Run tests
        run: npm run test
        # TODO: Pass all tests and remove this.
        # Continue on error in case there are test 
        # failures that shouldn't block the build
        continue-on-error: true

      # - name: Build Package      
      #   run: npm run build

      # - name: Configure npm for default registry with token
      #   run: |
      #     # For the default NPM registry (npmjs.org)
      #     SCOPE=@bitcobblers
      #     echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN || '' }}" > .npmrc
      #     echo "${SCOPE}:registry=https://registry.npmjs.org/" >> .npmrc
      #   if: ${{ env.NPM_TOKEN != '' && env.NPM_TOKEN != 'n/a' }}
      #   env:
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN || '' }}

      # - name: Publish Package
      #   # Only run when on main/tag
      #   if: ${{ (github.ref_type=='tag' || github.ref_name=='main') && env.NPM_TOKEN != '' && env.NPM_TOKEN != 'n/a' }}  
      #   run: npm publish --access public
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN || '' }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN || '' }}
      - name: Inject Google Analytics ID
        if: ${{ vars.G_TAG != '' }}
        env:
          GA_ID: ${{ vars.G_TAG }}
        run: node scripts/inject-ga-id.js

      - name: Build Storybook
        run: npm run build-storybook    

      - name: Upload Storybook 
        uses: actions/upload-artifact@v4
        if: ${{ github.ref_type=='tag' || github.ref_name=='main' }}  
        with:
          name: page
          path: storybook-static
